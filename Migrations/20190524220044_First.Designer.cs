// <auto-generated />
using System;
using ActivityCenter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ActivityCenter.Migrations
{
    [DbContext(typeof(ActivityContext))]
    [Migration("20190524220044_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ActivityCenter.Models.ActivityEvent", b =>
                {
                    b.Property<int>("ActivityEventId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivityDescription")
                        .IsRequired();

                    b.Property<int>("ActivityDuration");

                    b.Property<string>("ActivityName")
                        .IsRequired();

                    b.Property<DateTime>("ActivityStart");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserID");

                    b.HasKey("ActivityEventId");

                    b.HasIndex("UserID");

                    b.ToTable("ActivityList");
                });

            modelBuilder.Entity("ActivityCenter.Models.Join", b =>
                {
                    b.Property<int>("JoinId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActivityEventId");

                    b.Property<int>("UserId");

                    b.HasKey("JoinId");

                    b.HasIndex("ActivityEventId");

                    b.HasIndex("UserId");

                    b.ToTable("Joiners");
                });

            modelBuilder.Entity("ActivityCenter.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("UserList");
                });

            modelBuilder.Entity("ActivityCenter.Models.ActivityEvent", b =>
                {
                    b.HasOne("ActivityCenter.Models.User", "Coordinator")
                        .WithMany("Activities")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ActivityCenter.Models.Join", b =>
                {
                    b.HasOne("ActivityCenter.Models.ActivityEvent", "ActivityEvent")
                        .WithMany("Attendees")
                        .HasForeignKey("ActivityEventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ActivityCenter.Models.User", "AUser")
                        .WithMany("Joining")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
